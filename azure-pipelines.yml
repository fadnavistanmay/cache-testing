pool:
  name: 'jerick-z440'
  #vmImage: 'windows-2019-vs2019'

variables:
  KEY_SALT: 5
  system.debug: true

steps:
- bash: |
    echo file1>file1.txt
    mkdir folder1
    cd folder1
    echo file2>file2.txt
    mkdir subfolder1
    cd subfolder1
    echo file3>file3.txt

- task: CacheBeta@0
  inputs:
    cacheHitVar: cacheHit
    path: cached
    key: $(KEY_SALT) | $(Agent.OS) | **/file*.txt,!**/file2.txt,!**/subfolder1/**
    restoreKeys: |
      $(KEY_SALT) | $(Agent.OS)
  displayName: single-line (new)

- bash: |
    mkdir cached
    echo Hello from $(Build.BuildId) > cached/hello.txt
  condition: and(succeeded(), eq(variables['cacheHit'], 'false'))
  displayName: cache miss

- bash: |
    echo Hello from $(Build.BuildId) >> cached/hello.txt
  condition: and(succeeded(), eq(variables['cacheHit'], 'inexact'))
  displayName: cache inexact hit

- bash: cat cached/hello.txt
  displayName: 'display cached/hello.txt'

# - task: CacheBeta@0
#   inputs:
#     cacheHitVar: cacheHit2
#     key: |
#       $(Agent.OS)
#       README.md
#     path: oldcached
#   displayName: multi-line (old)

# - bash: |
#     mkdir oldcached
#     echo Hello from $(Build.BuildId) > oldcached/hello.txt
#   condition: and(succeeded(), eq(variables['cacheHit2'], 'false'))
#   displayName: cache miss

# - bash: |
#     echo Hello from $(Build.BuildId) >> oldcached/hello.txt
#   condition: and(succeeded(), eq(variables['cacheHit2'], 'inexact'))
#   displayName: cache inexact hit

# - bash: cat oldcached/hello.txt
#   displayName: 'display oldcached/hello.txt'